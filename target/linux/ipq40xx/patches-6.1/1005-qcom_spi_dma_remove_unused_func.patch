Index: linux-6.1.82/drivers/spi/spi-qup.c
===================================================================
--- linux-6.1.82.orig/drivers/spi/spi-qup.c
+++ linux-6.1.82/drivers/spi/spi-qup.c
@@ -884,36 +884,6 @@ static int spi_qup_transfer_one(struct s
 	return ret;
 }
 
-static bool spi_qup_can_dma(struct spi_master *master, struct spi_device *spi,
-			    struct spi_transfer *xfer)
-{
-	struct spi_qup *qup = spi_master_get_devdata(master);
-	size_t dma_align = dma_get_cache_alignment();
-	int n_words;
-
-	if (xfer->rx_buf) {
-		if (!IS_ALIGNED((size_t)xfer->rx_buf, dma_align) ||
-		    IS_ERR_OR_NULL(master->dma_rx))
-			return false;
-		if (qup->qup_v1 && (xfer->len % qup->in_blk_sz))
-			return false;
-	}
-
-	if (xfer->tx_buf) {
-		if (!IS_ALIGNED((size_t)xfer->tx_buf, dma_align) ||
-		    IS_ERR_OR_NULL(master->dma_tx))
-			return false;
-		if (qup->qup_v1 && (xfer->len % qup->out_blk_sz))
-			return false;
-	}
-
-	n_words = xfer->len / DIV_ROUND_UP(xfer->bits_per_word, 8);
-	if (n_words <= (qup->in_fifo_sz / sizeof(u32)))
-		return false;
-
-	return true;
-}
-
 static void spi_qup_release_dma(struct spi_master *master)
 {
 	if (!IS_ERR_OR_NULL(master->dma_rx))
@@ -922,57 +892,6 @@ static void spi_qup_release_dma(struct s
 		dma_release_channel(master->dma_tx);
 }
 
-static int spi_qup_init_dma(struct spi_master *master, resource_size_t base)
-{
-	struct spi_qup *spi = spi_master_get_devdata(master);
-	struct dma_slave_config *rx_conf = &spi->rx_conf,
-				*tx_conf = &spi->tx_conf;
-	struct device *dev = spi->dev;
-	int ret;
-
-	/* allocate dma resources, if available */
-	master->dma_rx = dma_request_chan(dev, "rx");
-	if (IS_ERR(master->dma_rx))
-		return PTR_ERR(master->dma_rx);
-
-	master->dma_tx = dma_request_chan(dev, "tx");
-	if (IS_ERR(master->dma_tx)) {
-		ret = PTR_ERR(master->dma_tx);
-		goto err_tx;
-	}
-
-	/* set DMA parameters */
-	rx_conf->direction = DMA_DEV_TO_MEM;
-	rx_conf->device_fc = 1;
-	rx_conf->src_addr = base + QUP_INPUT_FIFO;
-	rx_conf->src_maxburst = spi->in_blk_sz;
-
-	tx_conf->direction = DMA_MEM_TO_DEV;
-	tx_conf->device_fc = 1;
-	tx_conf->dst_addr = base + QUP_OUTPUT_FIFO;
-	tx_conf->dst_maxburst = spi->out_blk_sz;
-
-	ret = dmaengine_slave_config(master->dma_rx, rx_conf);
-	if (ret) {
-		dev_err(dev, "failed to configure RX channel\n");
-		goto err;
-	}
-
-	ret = dmaengine_slave_config(master->dma_tx, tx_conf);
-	if (ret) {
-		dev_err(dev, "failed to configure TX channel\n");
-		goto err;
-	}
-
-	return 0;
-
-err:
-	dma_release_channel(master->dma_tx);
-err_tx:
-	dma_release_channel(master->dma_rx);
-	return ret;
-}
-
 static void spi_qup_set_cs(struct spi_device *spi, bool val)
 {
 	struct spi_qup *controller;
@@ -1180,7 +1099,6 @@ error_clk:
 	clk_disable_unprepare(iclk);
 error_dma:
 	spi_qup_release_dma(master);
-error:
 	spi_master_put(master);
 	return ret;
 }
